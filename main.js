(()=>{"use strict";var __webpack_modules__={791:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  M: () => (/* binding */ myId),\n  S: () => (/* binding */ viewCardPhoto)\n});\n\n;// CONCATENATED MODULE: ./src/components/constants.js\n//попапы - поле закрытия Popup\nvar popups = document.querySelectorAll('.popup');\n\n// popup Редактирование профиля\nvar editProfileButton = document.querySelector('.profile__btn_action_edit-profile');\nvar popupEditProfile = document.querySelector('.popup_type_edit-profile');\nvar popupAddImage = document.querySelector('.popup_type_add-image');\nvar nameInput = document.querySelector('.popup__item_name');\nvar descriptionInput = document.querySelector('.popup__item_description');\n// const formEditProfile = document.querySelector('.popup__form_profile')\nvar formEditProfile = document.forms[\"form-edit-profile\"];\nvar newName = document.querySelector('.profile__name');\nvar newDescription = document.querySelector('.profile__decription');\n\n// кнопка закрытия popup\nvar closeButtons = document.querySelectorAll('.popup__btn_action_close');\n\n//popup добавление карточек\nvar addCardButton = document.querySelector('.profile__btn_action_add-photos');\nvar placeNameInput = document.querySelector('.popup__item_place-name');\nvar itemLinkInput = document.querySelector('.popup__item_link');\nvar templateCard = document.querySelector('#card-template').content.querySelector('.card');\nvar listGalleryCards = document.querySelector('.gallery__cards');\nvar formAddImage = document.forms[\"form-add-image\"];\n\n//popup просмотра фото\nvar popupViewPhoto = document.querySelector('.popup_type_view-photo');\nvar popupPhoto = document.querySelector('.popup__photo');\nvar popupPhotoCaption = document.querySelector('.popup__photo-caption');\n\n//popup подтверждения удаления\nvar popupAcceptDelete = document.querySelector('.popup_type_accept-delete');\nvar formAcceptDelete = document.forms[\"form-accept-delete\"];\n\n//popup смена аватара\nvar popupChangeAvatar = document.querySelector('.popup_type_change-avatar');\nvar formChangeAvatar = document.forms[\"form-change-avatar\"];\nvar changeAvatarButton = document.querySelector('.profile__avatar-btn');\nvar profilePhoto = document.querySelector('.profile__photo');\n// export const linkAvatarInput = document.forms[\"form-change-avatar\"].elements[\"avatar-link\"];\nvar linkAvatarInput = document.querySelector('.popup__item_avatar-link');\n\n//Объект валидации\nvar configForm = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__item',\n  submitButtonSelector: '.popup__btn',\n  inactiveButtonClass: 'popup__btn_disabled',\n  inputErrorClass: 'popup__item_invalid'\n};\n;// CONCATENATED MODULE: ./src/components/validate.js\nfunction showError(inputElement, errorElement, config) {\n  inputElement.classList.add(config.inputErrorClass); //'popup__item_invalid'\n  errorElement.textContent = inputElement.validationMessage;\n}\nfunction hideError(inputElement, errorElement, config) {\n  inputElement.classList.remove(config.inputErrorClass); //'popup__item_invalid'\n  errorElement.textContent = inputElement.validationMessage;\n}\nfunction checkInputValidity(inputElement, formElement, config) {\n  var isInputValidity = inputElement.validity.valid;\n  var errorElement = formElement.querySelector(\"#\".concat(inputElement.name, \"-error\"));\n  // console.log(errorElement);\n  if (isInputValidity) {\n    hideError(inputElement, errorElement, config);\n    // console.log(inputElement);\n  } else {\n    showError(inputElement, errorElement, config);\n  }\n}\n;\nfunction toggleButtonState(popupButtonSubmit, isFormValid, config) {\n  if (isFormValid) {\n    popupButtonSubmit.removeAttribute('disabled');\n    popupButtonSubmit.classList.remove(config.inactiveButtonClass);\n  } else {\n    popupButtonSubmit.setAttribute('disabled', true);\n    popupButtonSubmit.classList.add(config.inactiveButtonClass); //popup__btn_disabled\n  }\n}\nfunction setEventListener(formElement, config) {\n  var inputList = formElement.querySelectorAll(config.inputSelector); //.popup__item\n  var popupButtonSubmit = formElement.querySelector(config.submitButtonSelector); //.popup__btn_action_submit\n  toggleButtonState(popupButtonSubmit, formElement.checkValidity(), config);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      toggleButtonState(popupButtonSubmit, formElement.checkValidity(), config);\n      checkInputValidity(inputElement, formElement, config);\n    });\n  });\n}\n;\nfunction enableValidation(config) {\n  var formList = document.querySelectorAll(config.formSelector); //.popup__form\n  formList.forEach(function (formElement) {\n    setEventListener(formElement, config);\n    formElement.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n      resetFormState(formElement, config);\n    });\n  });\n}\nfunction resetFormState(formElement, config) {\n  var inputList = formElement.querySelectorAll(config.inputSelector);\n  inputList.forEach(function (inputElement) {\n    var errorElement = formElement.querySelector(\"#\".concat(inputElement.name, \"-error\"));\n    inputElement.classList.remove(config.inputErrorClass);\n    errorElement.textContent = '';\n  });\n  // formElement.reset();\n  toggleButtonState(formElement.querySelector(config.submitButtonSelector), false, config);\n}\n;// CONCATENATED MODULE: ./src/components/modal.js\n//Открытие модального окна\nfunction openPopup(item) {\n  item.classList.add('popup_opened');\n  document.addEventListener('keydown', handleEscKey);\n}\n\n// Функция закрытия модального окна\nfunction closePopup(item) {\n  item.classList.remove('popup_opened');\n  document.removeEventListener('keydown', handleEscKey);\n}\n\n// Функция обработки события клавиатуры\nfunction handleEscKey(event) {\n  if (event.key === 'Escape') {\n    var openedPopup = document.querySelector('.popup_opened');\n    if (openedPopup) {\n      closePopup(openedPopup);\n    }\n  }\n}\n;// CONCATENATED MODULE: ./src/components/api.js\nvar configApi = {\n  baseUrl: 'https://nomoreparties.co/v1/wbf-cohort-15',\n  headers: {\n    authorization: 'b4ee8ef2-41c2-427f-a7e5-ea90674cee2b',\n    'Content-Type': 'application/json'\n  }\n};\nfunction onResponse(res) {\n  return res.ok ? res.json() : res.json().then(function (error) {\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(error));\n  });\n}\n;\n\n//Загрузка информации о пользователе с сервера\nvar getUserInfo = function getUserInfo() {\n  return fetch(\"\".concat(configApi.baseUrl, \"/users/me\"), {\n    headers: configApi.headers\n  }).then(onResponse);\n};\n\n//Изменение информации профиля на сервере\nvar changeProfileInfo = function changeProfileInfo(dataProfile) {\n  return fetch(\"\".concat(configApi.baseUrl, \"/users/me\"), {\n    method: \"PATCH\",\n    headers: configApi.headers,\n    body: JSON.stringify(dataProfile)\n  }).then(onResponse);\n};\n\n//Изменение аватара на сервере\nvar changeUserAvatar = function changeUserAvatar(dataProfileAvatar) {\n  return fetch(\"\".concat(configApi.baseUrl, \"/users/me/avatar\"), {\n    method: \"PATCH\",\n    headers: configApi.headers,\n    body: JSON.stringify(dataProfileAvatar)\n  }).then(onResponse);\n};\n\n//Загрузка начальных карточек с сервера\nvar getInitialCards = function getInitialCards() {\n  return fetch(\"\".concat(configApi.baseUrl, \"/cards\"), {\n    headers: configApi.headers\n  }).then(onResponse);\n};\n\n//добавление карточки на сервер\nvar addUserCard = function addUserCard(userCard) {\n  return fetch(\"\".concat(configApi.baseUrl, \"/cards\"), {\n    method: \"POST\",\n    headers: configApi.headers,\n    body: JSON.stringify(userCard)\n  }).then(onResponse);\n};\n\n//добавление лайка на сервер\nvar addLike = function addLike(cardId) {\n  return fetch(\"\".concat(configApi.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: \"PUT\",\n    headers: configApi.headers\n  }).then(onResponse);\n};\n\n//Удаление лайка с сервера\nvar removeLike = function removeLike(cardId) {\n  return fetch(\"\".concat(configApi.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: \"DELETE\",\n    headers: configApi.headers\n  }).then(onResponse);\n};\n\n//удаление карточки с сервера\nvar removeCard = function removeCard(cardId) {\n  return fetch(\"\".concat(configApi.baseUrl, \"/cards/\").concat(cardId), {\n    method: \"DELETE\",\n    headers: configApi.headers\n  }).then(onResponse);\n};\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\n\n\n\n\n//функция создания карточки\nfunction createCard(dataCard) {\n  var galleryCard = templateCard.cloneNode(true);\n  var cardElementTitle = galleryCard.querySelector('.card__title');\n  var cardElementImage = galleryCard.querySelector('.card__image');\n  var cardElementTrashButton = galleryCard.querySelector('.card__btn_trash');\n  var cardElementLikeButton = galleryCard.querySelector('.card__btn');\n  var likesCounter = galleryCard.querySelector('.card__likes');\n  cardElementTitle.textContent = dataCard.name;\n  cardElementImage.src = dataCard.link;\n  cardElementImage.alt = dataCard.name;\n  //просмотр карточки\n  // cardElementImage.addEventListener('click', viewCardPhoto);\n  cardElementImage.addEventListener('click', function () {\n    viewCardPhoto(dataCard);\n  });\n  likesCounter.textContent = dataCard.likes.length;\n  var cardId = dataCard._id;\n\n  // //удаляем значок корзины с чужих карточек\n  // if(dataCard.owner._id !== myId) {\n  //     cardElementTrashButton.remove();\n  // } else {\n  // // удаление карточки\n  // cardElementTrashButton.addEventListener('click', (evt) => {\n  //     acceptDeleteCard(evt, cardId);\n  // });\n  // }\n\n  //удаляем значок корзины с чужих карточек\n  if (dataCard.owner._id !== myId) {\n    cardElementTrashButton.remove();\n  } else {\n    // удаление карточки без подтверждения\n    cardElementTrashButton.addEventListener('click', function (evt) {\n      deleteCard(evt, cardId);\n    });\n    //удаление карточки с подтверждением\n    // cardElementTrashButton.addEventListener('click', (evt) => {\n    //     acceptDeleteCard(evt, cardId);\n    // });\n    //     cardElementTrashButton.addEventListener('click', () => {\n    //     handleClickDelete(dataCard);\n    // });\n  }\n\n  //для отображения поставленных мной лайков после выгрузки карточек\n  if (isObjectWithIdInArray(dataCard.likes)) {\n    cardElementLikeButton.classList.add('card__btn_like-active');\n    ;\n  }\n  ;\n  cardElementLikeButton.addEventListener('click', function (evt) {\n    var isliked = cardElementLikeButton.classList.contains('card__btn_like-active');\n    if (!isliked) {\n      addLike(cardId).then(function (updateCard) {\n        likesCounter.textContent = updateCard.likes.length;\n        cardElementLikeButton.classList.add('card__btn_like-active');\n      }).catch(function (error) {\n        console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0438 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: \".concat(error));\n      });\n    } else {\n      removeLike(cardId).then(function (updateCard) {\n        likesCounter.textContent = updateCard.likes.length;\n        cardElementLikeButton.classList.remove('card__btn_like-active');\n      }).catch(function (error) {\n        console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0438 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: \".concat(error));\n      });\n    }\n  });\n  return galleryCard;\n}\n\n//функция проверки есть ли мой лайк в списке выгруженных карточек\nfunction isObjectWithIdInArray(arr) {\n  return arr.some(function (obj) {\n    return obj.hasOwnProperty('_id') && obj._id === myId;\n  });\n}\n\n//Функция удаления карточки - без подтверждения\nfunction deleteCard(evt, cardId) {\n  removeCard(cardId).then(function () {\n    evt.target.closest('.card').remove();\n  }).catch(function (error) {\n    console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0438 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: \".concat(error));\n  });\n}\n;\n\n//Функция \"нравится\" (без сервера)\n// function likeCard(evt) {\n//     evt.target.classList.toggle('card__btn_like-active');\n// }\n\n//Функция удаления карточки с подтверждением\n// export function acceptDeleteCard(evt, cardId) {\n//     openPopup(popupAcceptDelete);\n//     toggleButtonState(formAcceptDelete.querySelector(configForm.submitButtonSelector), true, configForm);\n//     formAcceptDelete.addEventListener('submit', function (submitEvt) {\n//         submitEvt.preventDefault();\n//         submitEvt.submitter.textContent = 'Удаление...';\n//         removeCard(cardId)\n//             .then(() => {\n//                 evt.target.closest('.card').remove();\n//                 closePopup(popupAcceptDelete);\n//             })\n//             .catch((error) => {\n//                 console.error(`Ошибка при удалении карточки: ${error}`);\n//             })\n//             .finally(() => {\n//                 submitEvt.submitter.textContent = 'Да';\n//             });\n//     });\n// };\n\n// formAcceptDelete.addEventListener('submit', (submitEvt) => {\n//     submitEvt.preventDefault();\n//     handleDeleteSubmit(submitEvt);\n//     // closePopup(popupAcceptDelete);\n// });\n\n// // переменная для карточки к удалению\n// let  cardForDelete = null;\n\n// const handleClickDelete = async (dataCard) => {\n//     cardForDelete = {\n//         id: dataCard._id,\n//         // element: dataCard\n//         element: createCard(dataCard)\n//     };\n//     openPopup(popupAcceptDelete);\n//     // toggleButtonState(formAcceptDelete.querySelector(configForm.submitButtonSelector), true, configForm);\n// }\n\n// function handleDeleteSubmit (evt) {\n//     evt.preventDefault();\n//     if (!cardForDelete) return;\n//     // console.log(evt);\n//     evt.submitter.textContent = 'Удаление...';\n//     removeCard(cardForDelete.id)\n//     .then(() => {\n//         // console.log(updateCard);\n//         // evt.target.closest('.card').remove();\n//         cardForDelete.element.remove();\n//         // handleDeleteCardClick(cardForDelete.element);\n//         closePopup(popupAcceptDelete);\n//         // cardForDelete = null;\n//     })\n//     .catch((error) => {\n//         console.error(`Ошибка при удалении карточки: ${error}`);\n//     })\n//     .finally(() => {\n//         evt.submitter.textContent = 'Удалить';\n//     });\n// };\n\n// function handleDeleteCardClick (element) {\n//     element.remove();\n//     // closePopup(popupAcceptDelete);\n// }\n;// CONCATENATED MODULE: ./src/components/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nvar myId = null;\n\n// добавляем обработчик события кнопке редактирования профиля для открытия модального окна c заполнением данных из профиля\neditProfileButton.addEventListener('click', function () {\n  openPopup(popupEditProfile);\n  nameInput.value = newName.textContent;\n  descriptionInput.value = newDescription.textContent;\n});\n\n// Функция обновления профиля введенными даннными\nfunction editProfile(evt) {\n  var dataProfile = {\n    name: newName.textContent,\n    about: newDescription.textContent\n  };\n  evt.submitter.textContent = 'Сохранение...';\n  changeProfileInfo(dataProfile).then(function () {\n    newName.textContent = nameInput.value;\n    newDescription.textContent = descriptionInput.value;\n    formEditProfile.reset();\n    closePopup(popupEditProfile);\n  }).catch(function (error) {\n    console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0438 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F: \".concat(error));\n  }).finally(function () {\n    evt.submitter.textContent = 'Сохранить';\n  });\n}\n\n//Функция сохранения внесенных в формы popup изменений при рекдактиронии профиля\nformEditProfile.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  editProfile(evt);\n});\n\n//Функция открытия просмотра изображения карточки\nfunction viewCardPhoto(dataCard) {\n  openPopup(popupViewPhoto);\n  popupPhoto.src = dataCard.link;\n  popupPhoto.alt = dataCard.name;\n  popupPhotoCaption.textContent = dataCard.name;\n}\n;\n\n// функция закрытия попапа по нажатию на крестик\ncloseButtons.forEach(function (item) {\n  item.addEventListener('click', function (evt) {\n    var popupClosest = evt.target.closest('.popup');\n    closePopup(popupClosest);\n  });\n});\n\n//добавляем обработчик события кнопке добавления карточки для открытия модального окна\naddCardButton.addEventListener('click', function () {\n  openPopup(popupAddImage);\n});\n\n//отрисовка карточки\nfunction renderCard(data) {\n  var newCard = createCard(data);\n  listGalleryCards.prepend(newCard);\n}\n\n// функция создания карточки из введенных данных\nfunction addCardFromPopup(evt) {\n  var newCardData = {\n    name: placeNameInput.value,\n    link: itemLinkInput.value\n  };\n  evt.submitter.textContent = 'Создание...';\n  addUserCard(newCardData).then(function (response) {\n    renderCard(response);\n    // resetFormState(formAddImage, configForm);\n    formAddImage.reset();\n    closePopup(popupAddImage);\n    // resetFormState(formAddImage, configForm);\n  }).catch(function (error) {\n    console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0438 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: \".concat(error));\n  }).finally(function () {\n    evt.submitter.textContent = 'Создать';\n  });\n}\n;\nformAddImage.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  addCardFromPopup(evt);\n  // evt.target.reset();\n});\n\n// Закрытие всех Popup при нажатии на Overlay\npopups.forEach(function (item) {\n  item.addEventListener('click', function (evt) {\n    if (evt.target.classList.contains('popup')) {\n      closePopup(evt.target);\n    }\n  });\n});\n\n//добавляем обработчик события кнопке смены аватара\nchangeAvatarButton.addEventListener('click', function () {\n  openPopup(popupChangeAvatar);\n});\n\n//функция смены аватара\nfunction changeAvatar(evt) {\n  var dataProfileAvatar = {\n    avatar: profilePhoto.src\n  };\n  evt.submitter.textContent = 'Сохранение...';\n  changeUserAvatar(dataProfileAvatar).then(function () {\n    profilePhoto.src = linkAvatarInput.value;\n    closePopup(popupChangeAvatar);\n    formChangeAvatar.reset();\n  }).catch(function (error) {\n    console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0438 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u0430: \".concat(error));\n  }).finally(function () {\n    evt.submitter.textContent = 'Сохранить';\n  });\n}\n\n//Добавляем обработчик события для формы изменения аватара\nformChangeAvatar.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  changeAvatar(evt);\n});\n\n//загрузки всех данных, и пользователя и карточек.\nPromise.all([getUserInfo(), getInitialCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    info = _ref2[0],\n    initialCards = _ref2[1];\n  newName.textContent = info.name;\n  newDescription.textContent = info.about;\n  profilePhoto.src = info.avatar;\n  myId = info._id;\n  initialCards.sort(function (a, b) {\n    return new Date(a.createdAt) - new Date(b.createdAt);\n  }); //добавляем карточки с сервера по дате создания, сначала последние\n  initialCards.forEach(function (card) {\n    return renderCard(card);\n  });\n}).catch(function (error) {\n  console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0432\\u044B\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0441 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430: \".concat(error));\n});\n\n//вкл валидацию\nenableValidation(configForm);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///791\n")}},__webpack_require__={d:(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},o:(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F)},__webpack_exports__={};__webpack_modules__[791](0,__webpack_exports__,__webpack_require__)})();